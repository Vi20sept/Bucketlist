How to connect sonar cube with your local system

1. Open the repository were your code is written in VS code.
2. Open the new terminal and type docker pull sonarqube , this will create sonarqube image.
3. Now create a conatiner type docker run -it -d -p 9000:9000 --name sonarcon docker image name.
4. Open the browser and type http://localhost:9000 , it will ask for user name and password just type admin for user name and password as well.
5. Now open the browser and download sonar scanner https://docs.sonarsource.com/sonarqube/9.9/analyzing-source-code/scanners/sonarscanner/
6. Click on windows 64-bit , after download extract all, open the folder and go to conf folder and open sonar-scanner.properties.
7. In sonar-scanner.properties , go to sonar.host.url and uncomment it.and type sonar.host.url=http://localhost:9000 this and save it.
8. Now go to bin folder and copy the path and now open environment variable and paste the path in both user aand system.
9. Now go to sonar cube and click on create project give the requirements and click on next.
10. Now click on generate code  and then click on continue.
11. Now click on other option and then click on windows, now copy the given script.
12. Now got to VS code and paste the script were your code is open it will scan the code.
13 Wait for 5 mins and  then go to sonarqube your code has been scanned.


How to connect sonar qube with jenkins pipeline(Jenkins declarative method)

Open the jenkins , now go to manage jenkins , then go to plugins
Now install the sonarqube scanner
Now under manage jenkins go to tools.
Under Sonarqube Scanner installations , click on the drop down and give the name.
If your system has sonarqube scanner then untick the installation and give the sonarqube scanner path under sonar_runner_home
For Ex:C:\Users\vivek\Downloads\sonar-scanner-cli-6.0.0.4432-windows\sonar-scanner-6.0.0.4432-windows
Then under manage jenkins now go to system
Under sonarquve server give the name and paste the sonarqube URL(http://localhost:9000)
Now under server authentication token copy the token from the sonarqube which is generated while creating project in sonarqube.
Click on Add and under kind select secret text Option giev the ID name and click on ADD.
Now under drop down select the token and then click on apply.
Under manage jenkins go to tools , under JDK give the name and if your system has JDk and untick the Install automatically option.
Now give the path of your system JDK (C:\Program Files\Microsoft\jdk-21.0.3.9-hotspot)
Now click on apply.
Now go to jenkins Dashboard and then click  on new Item and giev the project name and select the pipeline option and  create.
Now go to configure option of the project created.
Under pipeline script paste the below script and click on apply.
pipeline {
    agent any
    
    environment {
        scannerHome = tool 'SonarQube_scanner' // Ensure this name matches the tool configuration in Jenkins
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/Vi20sept/Bucketlist.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    // Print scannerHome for debugging
                    echo "SonarQube Scanner Home: ${scannerHome}"

                    withSonarQubeEnv('SonarQube_server') { // Ensure this name matches the SonarQube server configuration in Jenkins
                        bat "sonar-scanner.bat -D sonar.projectKey=jenkins-pipeline  -D sonar.sources=.  -D sonar.host.url=http://localhost:9000  -D sonar.token=sqp_b6c7564861d7e2986911128b15b67ef505983c93"
                    }
                }
            }
        }
    }
}


Now click on Build option of the project created, after successfull configuration .
Go to sonarqube and go to project created you will see that your code has been analysed.



    